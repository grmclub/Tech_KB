-------------------------------------------------------------
https://rspacesamuel.medium.com/design-patterns-every-data-engineer-should-know-f6c48cd73592
https://www.eckerson.com/articles/data-pipeline-design-patterns
https://github.com/Sourav692/data-engineering-interview-questions
-------------------------------------------------------------

System Design Flow 
 
1. Understand the problem and scope: 
 - define the use cases, with stakeholders/BA's help 
 - suggest additional features 
 - remove items that interviewer deems out of scope 
 - assume high availability is required, add as a use case 
 
2. Think about constraints: 
 - ask how many requests per month 
 - ask how many requests per second (they may volunteer it or make you do the math) 
 - estimate reads vs. writes percentage 
 - keep 80/20 rule in mind when estimating 
 - how much data written per second 
 - total storage required over 5 years 
 - how much data read per second 
 
3. Abstract design: 
 - layers (service, data, caching) 
 - infrastructure: load balancing, messaging 
 - rough overview of any key algorithm that drives the service 
 - consider bottlenecks and determine solutions
 
-------------------------------------------------------------
Layers of the enterprise architecture(TOGAF)
============================================
1. Business architecture or business process architecture which defines the business strategy, governance,
   organization, and key business processes of the organization

2. Applications architecture which provides a blueprint for the individual application systems to be deployed,
   the interactions between the application systems, and their relationships to the 
   core business  processes of the organization with the frameworks for services to 
   be exposed as business functions for integration.

3. Data architecture which describes the structure of an organization's logical and physical data assets 
   and the associated data management resources.

4. Technology architecture or technology architecture which describes the hardware, software and network infrastructure
   needed to support the deployment of core, mission-critical applications
-------------------------------------------------------------

-------------------------------------------------------------

-------------------------------------------------------------

-------------------------------------------------------------

-------------------------------------------------------------

-------------------------------------------------------------

-------------------------------------------------------------






 
 